"""
Django settings for Pegula `backend` project.

Generated by 'django-admin startproject' using Django 1.8b2.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1%g+!9=_#4wyp*-v=+hiopr*dgn3$ysy=23j%*(9y2tw@(vt))'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Use a custom User class
AUTH_USER_MODEL = 'backend.User'

# Application definition
INSTALLED_APPS = (
    'grappelli',  # sexy Django Admin skin must come before `django.contrib.admin`
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.staticfiles',

    # Django REST Framework & REST Auth
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'rest_framework_swagger',
    'corsheaders',

    # Pegula
    'backend'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware'
)

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsgi.application'


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases
# We use local SQLite database for development, PostgreSQL in production
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Django REST Auth utilizes Django REST Framework's `TokenAuthentication` scheme
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
}
REST_AUTH_SERIALIZERS = {
    'TOKEN_SERIALIZER': 'backend.serializers.AuthTokenSerializer',
    'USER_DETAILS_SERIALIZER': 'backend.serializers.UserFullSerializer',
    'LOGIN_SERIALIZER': 'backend.serializers.RestAuthLoginSerializer',
}

CORS_ORIGIN_ALLOW_ALL = DEBUG  # allow API requests from any domain during development
CORS_URLS_REGEX = r'^/api/.*$'

LOG_LEVEL = os.getenv('DJANGO_LOG_LEVEL', 'DEBUG' if DEBUG else 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
        },
        'pegula': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
        },
        'backend': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
        }
    },
}

# Django Admin skin settings
GRAPPELLI_ADMIN_TITLE = 'Pegula'

# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/
TIME_ZONE = 'UTC'
USE_TZ = True
LANGUAGE_CODE = 'en-us'
USE_I18N = True
USE_L10N = True

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'  # isn't this the default already?

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/
STATIC_ROOT = 'static/' 
STATIC_URL = '/static/'
